version: '3.8'

services:
  # the engine requires a PostgreSQL database
  engine-db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: engine
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - engine_data:/var/lib/postgresql/data
      - ./db_init/db_init.sh:/docker-entrypoint-initdb.d/db_init.sh

  engine:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "12000:12000"
    environment:
      ENGINE_DEV_MODE: "true"
      ENGINE_DB_URL: "jdbc:postgresql://engine-db:5432/engine"
      ENGINE_DB_USER: engine
      ENGINE_DB_PASSWORD: engine
      ENGINE_ALLOWED_ISSUERS: "http://keycloak:11000"
      ENGINE_ISSUER_OVERRIDE: "http://keycloak:11000/realms/projectvc-realm"
      SWAGGER_ENGINE_URL: "http://localhost:12000"
      SWAGGER_SECURITY_AUTH_URL: "http://localhost:11000/realms/projectvc-realm"
      SWAGGER_SECURITY_CLIENT_ID: "engine-client"
      ENGINE_CLIENT_SECRET: "YOUR_CLIENT_SECRET"
    depends_on:
      - engine-db
      - keycloak

  read-model:
    image: ghcr.io/noumenadigital/images/read-model:latest
    ports:
      - "5555:5555"
    environment:
      READ_MODEL_DB_URL: "postgres://read_model:read_model_pwd@engine-db:5432/engine"
      READ_MODEL_DB_USER: read_model
      READ_MODEL_ALLOWED_ISSUERS: "http://keycloak:11000/realms/projectvc-realm"
      READ_MODEL_ENGINE_HEALTH_ENDPOINT: "http://engine:12000/actuator/health"
    depends_on:
      - engine-db
      - engine

  keycloak-db:
    image: postgres:14.13-alpine
    environment:
      POSTGRES_PASSWORD: testing
    healthcheck:
      test: pg_isready -U postgres
      interval: 1s
      timeout: 5s
      retries: 50

  keycloak:
    image: quay.io/keycloak/keycloak:23.0
    command: start --hostname-strict=false --hostname-strict-https=false --metrics-enabled=true --db=postgres
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: Keycloak123!
      KC_DB_URL: jdbc:postgresql://keycloak-db/postgres
      KC_DB_USERNAME: postgres
      KC_DB_PASSWORD: testing
      KC_HEALTH_ENABLED: "true"
      KC_HTTP_ENABLED: "true"
      KC_HTTP_PORT: 11000
      KC_HOSTNAME: keycloak
    ports:
      - "11000:11000"
    healthcheck:
      test: ["CMD-SHELL", "exec 3<>/dev/tcp/127.0.0.1/11000;echo -e 'GET /health/ready HTTP/1.1\r\nhost: http://localhost\r\nConnection: close\r\n\r\n' >&3;if [ $? -eq 0 ]; then echo 'Healthcheck Successful';exit 0;else echo 'Healthcheck Failed';exit 1;fi;"]
      interval: 1s
      retries: 60
    depends_on:
      keycloak-db:
        condition: service_healthy

  keycloak-provisioning:
    build:
      context: ./keycloak-provisioning
      dockerfile: Dockerfile
    depends_on:
      keycloak:
        condition: service_healthy

volumes:
  engine_data:
  keycloak_data: 