events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                     '$status $body_bytes_sent "$http_referer" '
                     '"$http_user_agent" "$http_x_forwarded_for"';
    
    access_log  /var/log/nginx/access.log  main;
    error_log   /var/log/nginx/error.log debug;

    resolver 127.0.0.11 valid=30s;  # Docker's internal DNS

    upstream keycloak {
        server keycloak:11000;
    }

    upstream engine {
        server engine:12000;
    }

    upstream frontend {
        server host.docker.internal:5173;
    }

    # Define CORS headers in a map to avoid duplication
    map $http_origin $cors_origin {
        default "";
        "http://localhost:5173" "http://localhost:5173";
    }

    # Common CORS headers
    map $request_method $cors_method {
        default "GET, POST, OPTIONS, PUT, DELETE";
    }

    map $request_method $cors_headers {
        default "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization";
    }

    server {
        listen 80;
        server_name localhost;

        # Direct access to Keycloak admin console
        location /admin/ {
            proxy_pass          http://keycloak/admin/;
            proxy_set_header    Host $host;
            proxy_set_header    X-Real-IP $remote_addr;
            proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header    X-Forwarded-Proto $scheme;
            proxy_set_header    X-Forwarded-Host $host;
            proxy_set_header    X-Forwarded-Port $server_port;
            
            proxy_buffer_size          128k;
            proxy_buffers              4 256k;
            proxy_busy_buffers_size    256k;
        }

        # Proxy for Keycloak realms
        location /realms/ {
            proxy_pass          http://keycloak/realms/;
            proxy_set_header    Host $host;
            proxy_set_header    X-Real-IP $remote_addr;
            proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header    X-Forwarded-Proto $scheme;
            proxy_set_header    X-Forwarded-Host $host;
            proxy_set_header    X-Forwarded-Port $server_port;
            
            proxy_buffer_size          128k;
            proxy_buffers              4 256k;
            proxy_busy_buffers_size    256k;
            
            # CORS headers
            if ($cors_origin != "") {
                add_header 'Access-Control-Allow-Origin' $cors_origin always;
                add_header 'Access-Control-Allow-Methods' $cors_method always;
                add_header 'Access-Control-Allow-Headers' $cors_headers always;
                add_header 'Access-Control-Allow-Credentials' 'true' always;
            }

            # Handle OPTIONS requests
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain; charset=utf-8';
                add_header 'Content-Length' 0;
                return 204;
            }
        }

        # Proxy for Keycloak resources
        location /resources/ {
            proxy_pass          http://keycloak/resources/;
            proxy_set_header    Host $host;
            proxy_set_header    X-Real-IP $remote_addr;
            proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header    X-Forwarded-Proto $scheme;
            proxy_set_header    X-Forwarded-Host $host;
            proxy_set_header    X-Forwarded-Port $server_port;
            
            proxy_buffer_size          128k;
            proxy_buffers              4 256k;
            proxy_busy_buffers_size    256k;
        }

        # Proxy for Keycloak auth endpoint
        location /auth/ {
            proxy_pass          http://keycloak/;
            proxy_set_header    Host $host;
            proxy_set_header    X-Real-IP $remote_addr;
            proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header    X-Forwarded-Proto $scheme;
            proxy_set_header    X-Forwarded-Host $host;
            proxy_set_header    X-Forwarded-Port $server_port;
            
            # CORS headers
            if ($cors_origin != "") {
                add_header 'Access-Control-Allow-Origin' $cors_origin always;
                add_header 'Access-Control-Allow-Methods' $cors_method always;
                add_header 'Access-Control-Allow-Headers' $cors_headers always;
                add_header 'Access-Control-Allow-Credentials' 'true' always;
            }

            # Handle OPTIONS requests
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain; charset=utf-8';
                add_header 'Content-Length' 0;
                return 204;
            }
        }

        # Proxy for engine API
        location /api/ {
            proxy_pass          http://engine/;
            proxy_set_header    Host $host;
            proxy_set_header    X-Real-IP $remote_addr;
            proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header    X-Forwarded-Proto $scheme;
            
            # CORS headers
            if ($cors_origin != "") {
                add_header 'Access-Control-Allow-Origin' $cors_origin always;
                add_header 'Access-Control-Allow-Methods' $cors_method always;
                add_header 'Access-Control-Allow-Headers' $cors_headers always;
                add_header 'Access-Control-Allow-Credentials' 'true' always;
            }

            # Handle OPTIONS requests
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain; charset=utf-8';
                add_header 'Content-Length' 0;
                return 204;
            }
        }

        # Proxy for frontend
        location / {
            proxy_pass          http://frontend;
            proxy_set_header    Host $host;
            proxy_set_header    X-Real-IP $remote_addr;
            proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header    X-Forwarded-Proto $scheme;
            proxy_set_header    Upgrade $http_upgrade;
            proxy_set_header    Connection "upgrade";
            proxy_read_timeout  300;
            proxy_connect_timeout 300;

            # Enable debug logging for this location
            error_log /var/log/nginx/frontend_error.log debug;
            access_log /var/log/nginx/frontend_access.log main;
        }
    }
} 